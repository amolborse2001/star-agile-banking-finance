pipeline {
    agent any

    tools {
        maven "M2_HOME"
    }

    stages {
        stage('Build') {
            steps {
                // Get code from your Git repository
                git 'https://github.com/rohinicbabu/star-agile-banking-finance.git'
                // Run Maven build
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }        
        }
        stage('Generate Test Reports') {
            steps {
                publishHTML([
                    allowMissing: false, 
                    alwaysLinkToLastBuild: false, 
                    keepAll: false, 
                    reportDir: 'target/surefire-reports', 
                    reportFiles: 'index.html', 
                    reportName: 'HTML Report'
                ])
            }
        }
        stage('Create Docker Image') {
            steps {
                // Build the Docker image
                sh 'docker build -t amol2001/banking-project-demo:3.0 .'
            }
        }
        stage('Docker-Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'Docker-login', passwordVariable: 'dockerpassword', usernameVariable: 'dockerlogin')]) { 
                    // Login to Docker
                    sh 'echo ${dockerpassword} | docker login -u ${dockerlogin} --password-stdin'
                }
            }
        }
        stage('Push-Image') {
            steps {
                // Push the Docker image to your repository
                sh 'docker push amol2001/banking-project-demo:3.0'
            }
        }
        stage('Manual EC2 Instance Creation') {
            steps {
                script {
                    echo 'Please create the EC2 instance manually before proceeding.'
                    echo 'Ensure it has the correct security group and configuration.'
                }
            }
        }
        stage('Config & Deployment') {
            steps {
                withCredentials([
                    aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS-ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'),
                    file(credentialsId: 'my-ec2-key', variable: 'KEY_FILE') // Use the new secret file credential
                ]) {
                    dir('terraform-files') {
                        // Commenting out the terraform commands since the instance will be created manually
                        // sh "sudo chmod 600 ${KEY_FILE}" // Change permissions for the key file
                        // sh 'terraform init'
                        // sh 'terraform validate'
                        // sh 'terraform apply --auto-approve'
                        echo 'Skipping Terraform commands; instance created manually.'
                    }
                }
            }
        }
    }
}
